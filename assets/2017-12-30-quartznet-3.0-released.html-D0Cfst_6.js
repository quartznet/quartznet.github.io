import{_ as s,r as i,o as l,c as d,b as t,d as e,a as o,w as c,e as p}from"./app-Ba_ts8M_.js";const m={},u=t("p",null,"The wait is over, Quartz.NET 3.0 is here with .NET Core support and async/await!",-1),h={href:"https://github.com/mjrousos",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/danielmarbach",target:"_blank",rel:"noopener noreferrer"},b=p("<p><strong>NEW FEATURE</strong></p><ul><li>Task based jobs with async/await support, internals work in async/await manner</li><li>Support .NET Core / netstandard 2.0 and .NET Framework 4.5.2 and later</li><li>Support for Microsoft.Data.Sqlite via provider name SQLite-Microsoft, the old provider SQLite also still works</li><li>Added preliminary support for SQL Server Memory-Optimized tables and Quartz.Impl.AdoJobStore.UpdateLockRowSemaphoreMOT</li><li>Common.Logging removed from dependencies</li><li>C5 Collections removed from ILMerge process, no longer needed</li><li>Add support for eager validation of job scheduling XML file on plugin start</li><li>Add support for extra custom time zone resolver function in TimeZoneUtil</li></ul><p><strong>BREAKING CHANGES</strong></p><ul><li>Jobs and plugins are now in a separate assemblies/NuGet packages Quartz.Jobs and Quartz.Plugins</li><li>ADO.NET provider names have been simplified, the provider names are without version, e.g. SqlServer-20 =&gt; SqlServer</li><li>API methods have been revisited to mainly use <code>IReadOnlyCollection&lt;T&gt;</code>, this hides both <code>HashSet&lt;T&gt;</code>s and <code>List&lt;T&gt;</code>s</li><li>LibLog has been hidden as internal (ILog etc), like it was originally intended to be</li><li>SimpleThreadPool is gone, old owned threads are gone</li><li>Scheduler methods have been changed to be Task based, remember to await them</li><li>IJob interface now returns a task</li><li>Some IList properties have been changed to IReadOnlyList to properly reflect intent</li><li>SQL Server CE support has been dropped</li><li>DailyCalendar uses now datetimes for excluded dates and has ISet interface to access them</li><li>IObjectSerializer has new method, void Initialize(), that has to be implemented</li><li>IInterruptableJob removed in favor of context&#39;s CancellationToken</li></ul><p><strong>KNOWN ISSUES</strong></p><ul><li>Issues with time zone ids between Windows and Linux, they use different ids for the same zone</li><li>No remoting support for .NET Core</li></ul>",6);function f(_,v){const a=i("ExternalLinkIcon"),r=i("RouteLink"),n=i("Download");return l(),d("div",null,[u,t("p",null,[e("A big thank you goes to "),t("a",h,[e("Mike Rousos"),o(a)]),e(" who really made it possible to get Quartz.NET working on .NET Core. "),t("a",g,[e("Daniel Marbach"),o(a)]),e(" also contributed a lot with ideas and code to async side. And of course never forgetting the community members that have provided feedback and fixes.")]),t("p",null,[e("Please see the "),o(r,{to:"/documentation/quartz-3.x/migration-guide.html"},{default:c(()=>[e("migration guide")]),_:1}),e(".")]),b,o(n)])}const S=s(m,[["render",f],["__file","2017-12-30-quartznet-3.0-released.html.vue"]]),T=JSON.parse('{"path":"/posts/2017-12-30-quartznet-3.0-released.html","title":"Quartz.NET 3.0 Released","lang":"en-US","frontmatter":{"title":"Quartz.NET 3.0 Released","tags":["releases"]},"headers":[],"git":{"updatedTime":1735723320000,"contributors":[{"name":"JT","email":"975824+Hawxy@users.noreply.github.com","commits":1}]},"filePathRelative":"_posts/2017-12-30-quartznet-3.0-released.md"}');export{S as comp,T as data};
