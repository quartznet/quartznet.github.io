import{_ as c,r as p,o as u,c as r,b as n,a,w as e,d as s,e as i}from"./app-Ba_ts8M_.js";const d={},k=n("p",null,"This release concentrates on tweaking the DI story and fixing some found dependency issues.",-1),g={class:"table-of-contents"},h=n("h2",{id:"quartz-extensions-hosting",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#quartz-extensions-hosting"},[n("span",null,"Quartz.Extensions.Hosting")])],-1),m={href:"https://www.nuget.org/packages/Quartz.Extensions.Hosting/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://andrewlock.net/",target:"_blank",rel:"noopener noreferrer"},v=n("h2",{id:"refining-di-integration-api",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#refining-di-integration-api"},[n("span",null,"Refining DI integration API")])],-1),b=n("p",null,"Some work was done to improve the MS DI integration API.",-1),w=n("h3",{id:"options-pattern",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#options-pattern"},[n("span",null,"Options pattern")])],-1),_={href:"https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/options",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"QuartzOptions",-1),y=i(`<div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">// we can use options pattern to support hooking your own configuration</span>
<span class="token comment">// because we don&#39;t use service registration api</span>
<span class="token comment">// we need to manally ensure the job is present in DI</span>
services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddTransient</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ExampleJob<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Configure</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>SampleOptions<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>Configuration<span class="token punctuation">.</span><span class="token function">GetSection</span><span class="token punctuation">(</span><span class="token string">&quot;Sample&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddOptions</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>QuartzOptions<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Configure</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IOptions<span class="token punctuation">&lt;</span>SampleOptions<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> dep<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrWhiteSpace</span><span class="token punctuation">(</span>dep<span class="token punctuation">.</span>Value<span class="token punctuation">.</span>CronSchedule<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> jobKey <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">JobKey</span><span class="token punctuation">(</span><span class="token string">&quot;options-custom-job&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;custom&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            options<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddJob</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ExampleJob<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>j <span class="token operator">=&gt;</span> j<span class="token punctuation">.</span><span class="token function">WithIdentity</span><span class="token punctuation">(</span>jobKey<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            options<span class="token punctuation">.</span><span class="token function">AddTrigger</span><span class="token punctuation">(</span>trigger <span class="token operator">=&gt;</span> trigger
                <span class="token punctuation">.</span><span class="token function">WithIdentity</span><span class="token punctuation">(</span><span class="token string">&quot;options-custom-trigger&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;custom&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">ForJob</span><span class="token punctuation">(</span>jobKey<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">WithCronSchedule</span><span class="token punctuation">(</span>dep<span class="token punctuation">.</span>Value<span class="token punctuation">.</span>CronSchedule<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="schedulejob" tabindex="-1"><a class="header-anchor" href="#schedulejob"><span>ScheduleJob</span></a></h3><p>A new shorthand was created to quickly define a job with trigger using a single call.</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>q<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ScheduleJob</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ExampleJob<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>trigger <span class="token operator">=&gt;</span> trigger
    <span class="token punctuation">.</span><span class="token function">WithIdentity</span><span class="token punctuation">(</span><span class="token string">&quot;Combined Configuration Trigger&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">StartAt</span><span class="token punctuation">(</span>DateBuilder<span class="token punctuation">.</span><span class="token function">EvenSecondDate</span><span class="token punctuation">(</span>DateTimeOffset<span class="token punctuation">.</span>UtcNow<span class="token punctuation">.</span><span class="token function">AddSeconds</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithDailyTimeIntervalSchedule</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">WithInterval</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> IntervalUnit<span class="token punctuation">.</span>Second<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithDescription</span><span class="token punctuation">(</span><span class="token string">&quot;my awesome trigger configured for a job with single call&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="addcalendar" tabindex="-1"><a class="header-anchor" href="#addcalendar"><span>AddCalendar</span></a></h3><p>You can now add calendars using the DI API.</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> calendarName <span class="token operator">=</span> <span class="token string">&quot;myHolidayCalendar&quot;</span><span class="token punctuation">;</span>
q<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddCalendar</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>HolidayCalendar<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>
    <span class="token named-parameter punctuation">name</span><span class="token punctuation">:</span> calendarName<span class="token punctuation">,</span>
    <span class="token named-parameter punctuation">replace</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token named-parameter punctuation">updateTriggers</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">AddExcludedDate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">DateTime</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

q<span class="token punctuation">.</span><span class="token function">AddTrigger</span><span class="token punctuation">(</span>t <span class="token operator">=&gt;</span> t
    <span class="token punctuation">.</span><span class="token function">WithIdentity</span><span class="token punctuation">(</span><span class="token string">&quot;Daily Trigger&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ForJob</span><span class="token punctuation">(</span>jobKey<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">StartAt</span><span class="token punctuation">(</span>DateBuilder<span class="token punctuation">.</span><span class="token function">EvenSecondDate</span><span class="token punctuation">(</span>DateTimeOffset<span class="token punctuation">.</span>UtcNow<span class="token punctuation">.</span><span class="token function">AddSeconds</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithDailyTimeIntervalSchedule</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">WithInterval</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> IntervalUnit<span class="token punctuation">.</span>Second<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithDescription</span><span class="token punctuation">(</span><span class="token string">&quot;my awesome daily time interval trigger&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ModifiedByCalendar</span><span class="token punctuation">(</span>calendarName<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="microsoft-sql-server" tabindex="-1"><a class="header-anchor" href="#microsoft-sql-server"><span>Microsoft SQL Server</span></a></h2><p>Now Quartz no longer has hard dependency on <code>Microsoft.Data.SqlClient</code> package. Full framework defaults now back to same behavior as it was with Quartz 3.0 (using built-in System.Data.SqlClient driver).</p><h3 id="full-framework" tabindex="-1"><a class="header-anchor" href="#full-framework"><span>Full Framework</span></a></h3>`,10),q=n("code",null,"SqlServer",-1),x=n("code",null,"SystemDataSqlClient",-1),I=n("code",null,"System.Data.SqlClient",-1),C={href:"https://www.nuget.org/packages/Microsoft.Data.SqlClient",target:"_blank",rel:"noopener noreferrer"},D=n("h3",{id:"net-core",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#net-core"},[n("span",null,".NET Core")])],-1),E={href:"https://www.nuget.org/packages/Microsoft.Data.SqlClient",target:"_blank",rel:"noopener noreferrer"},A=i('<h3 id="query-plan-cache-pollution-fix" tabindex="-1"><a class="header-anchor" href="#query-plan-cache-pollution-fix"><span>Query plan cache pollution fix</span></a></h3><p>There was an important fix for SQL Server where varying text parameter sizes caused query plan cache pollution. Now when no parameter size is defined for string parameter, default value of 4000 will be used. This problem has been present since the beginning.</p><h2 id="github-issues" tabindex="-1"><a class="header-anchor" href="#github-issues"><span>GitHub Issues</span></a></h2><p><strong>BREAKING CHANGES</strong></p><ul><li>Remove dependency on Microsoft.Data.SqlClient (#912)</li><li>LogContext moved from Quartz namespace to Quartz.Logging namespace (#915)</li><li>For Full Framework, System.Data.SqlClient is again the default provider, Microsoft.Data can be used via provider MicrosoftDataSqlClient (#916)</li></ul><p><strong>NEW FEATURE</strong></p><ul><li>Introduce separate Quartz.Extensions.Hosting (#911)</li><li>You can now schedule job and trigger in MS DI integration with single .ScheduleJob call (#943)</li><li>Support adding calendars to MS DI via AddCalendar&lt;T&gt; (#945)</li></ul><p><strong>FIXES</strong></p><ul><li>Revert change in 3.1: CronExpression/cron trigger throwing <code>NotImplementedException</code> when calculating final fire time (#905)</li><li>Use 2.1 as the minimum version for the .NET Platform Extensions (#923)</li><li>ServiceCollection.AddQuartz() should register default ITypeLoadHelper if none supplied (#924)</li><li>SqlServer AdoJobStore SqlParameter without text size generates pressure on server (#939)</li><li>DbProvider initialization logic should also read quartz.config (#951)</li><li>LoggingJobHistoryPlugin and LoggingTriggerHistoryPlugin names are null with IoC configuration (#926)</li><li>Improve options pattern to allow better custom configuration story (#955)</li></ul>',9);function z(T,N){const t=p("router-link"),o=p("ExternalLinkIcon"),l=p("Download");return u(),r("div",null,[k,n("nav",g,[n("ul",null,[n("li",null,[a(t,{to:"#quartz-extensions-hosting"},{default:e(()=>[s("Quartz.Extensions.Hosting")]),_:1})]),n("li",null,[a(t,{to:"#refining-di-integration-api"},{default:e(()=>[s("Refining DI integration API")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#options-pattern"},{default:e(()=>[s("Options pattern")]),_:1})]),n("li",null,[a(t,{to:"#schedulejob"},{default:e(()=>[s("ScheduleJob")]),_:1})]),n("li",null,[a(t,{to:"#addcalendar"},{default:e(()=>[s("AddCalendar")]),_:1})])])]),n("li",null,[a(t,{to:"#microsoft-sql-server"},{default:e(()=>[s("Microsoft SQL Server")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#full-framework"},{default:e(()=>[s("Full Framework")]),_:1})]),n("li",null,[a(t,{to:"#net-core"},{default:e(()=>[s(".NET Core")]),_:1})]),n("li",null,[a(t,{to:"#query-plan-cache-pollution-fix"},{default:e(()=>[s("Query plan cache pollution fix")]),_:1})])])]),n("li",null,[a(t,{to:"#github-issues"},{default:e(()=>[s("GitHub Issues")]),_:1})])])]),h,n("p",null,[s("A new package "),n("a",m,[s("Quartz.Extensions.Hosting"),a(o)]),s(" was created with the help of "),n("a",f,[s("Andrew Lock"),a(o)]),s(". If you are using generic host and you don't need ASP.NET specific functionality like health checks, you can switch to this new package to reduce dependencies.")]),v,b,w,n("p",null,[s("Now the API uses "),n("a",_,[s("options pattern"),a(o)]),s(" properly and you can attach your own configurators to alter "),S,s(".")]),y,n("p",null,[s("You can use either one of the two providers, "),q,s(" (default) or "),x,s(". Former uses "),I,s(" and latter the new "),n("a",C,[s("Microsoft.Data.SqlClient package"),a(o)]),s(". If you choose to use the new package, make sure you have the NuGet package installed.")]),D,n("p",null,[s("You need to ensure you have "),n("a",E,[s("Microsoft.Data.SqlClient package"),a(o)]),s(" installed.")]),A,a(l)])}const j=c(d,[["render",z],["__file","2020-10-01-quartznet-3.2-released.html.vue"]]),H=JSON.parse('{"path":"/posts/2020-10-01-quartznet-3.2-released.html","title":"Quartz.NET 3.2 Released","lang":"en-US","frontmatter":{"title":"Quartz.NET 3.2 Released","tags":["releases"]},"headers":[{"level":2,"title":"Quartz.Extensions.Hosting","slug":"quartz-extensions-hosting","link":"#quartz-extensions-hosting","children":[]},{"level":2,"title":"Refining DI integration API","slug":"refining-di-integration-api","link":"#refining-di-integration-api","children":[{"level":3,"title":"Options pattern","slug":"options-pattern","link":"#options-pattern","children":[]},{"level":3,"title":"ScheduleJob","slug":"schedulejob","link":"#schedulejob","children":[]},{"level":3,"title":"AddCalendar","slug":"addcalendar","link":"#addcalendar","children":[]}]},{"level":2,"title":"Microsoft SQL Server","slug":"microsoft-sql-server","link":"#microsoft-sql-server","children":[{"level":3,"title":"Full Framework","slug":"full-framework","link":"#full-framework","children":[]},{"level":3,"title":".NET Core","slug":"net-core","link":"#net-core","children":[]},{"level":3,"title":"Query plan cache pollution fix","slug":"query-plan-cache-pollution-fix","link":"#query-plan-cache-pollution-fix","children":[]}]},{"level":2,"title":"GitHub Issues","slug":"github-issues","link":"#github-issues","children":[]}],"git":{"updatedTime":1735723320000,"contributors":[{"name":"JT","email":"975824+Hawxy@users.noreply.github.com","commits":1}]},"filePathRelative":"_posts/2020-10-01-quartznet-3.2-released.md"}');export{j as comp,H as data};
