import{_ as s,r as t,o,c,b as a,d as n,a as i,e as l}from"./app-Ba_ts8M_.js";const p={},r={href:"https://www.nuget.org/packages/Quartz.Jobs",target:"_blank",rel:"noopener noreferrer"},u=l(`<h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation"><span>Installation</span></a></h2><p>You need to add NuGet package reference to your project which uses Quartz.</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>Install-Package Quartz.Jobs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="features" tabindex="-1"><a class="header-anchor" href="#features"><span>Features</span></a></h2><h3 id="directoryscanjob" tabindex="-1"><a class="header-anchor" href="#directoryscanjob"><span>DirectoryScanJob</span></a></h3><p>Inspects a directory and compares whether any files&#39; &quot;last modified dates&quot; have changed since the last time it was inspected. If one or more files have been updated (or created), the job invokes a &quot;call-back&quot; method on an <code>IDirectoryScanListener</code>that can be found in the <code>SchedulerContext</code>.</p><h3 id="filescanjob" tabindex="-1"><a class="header-anchor" href="#filescanjob"><span>FileScanJob</span></a></h3><p>Inspects a file and compares whether its &quot;last modified dates&quot; have changed since the last time it was inspected. If one or more files have been updated (or created), the job invokes a &quot;call-back&quot; method on an <code>IFileScanListener</code>that can be found in the <code>SchedulerContext</code>.</p><h3 id="nativejob" tabindex="-1"><a class="header-anchor" href="#nativejob"><span>NativeJob</span></a></h3><p>Built in job for executing native executables in a separate process.</p><p><strong>Example</strong></p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> job <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">JobDetail</span><span class="token punctuation">(</span><span class="token string">&quot;dumbJob&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Quartz<span class="token punctuation">.</span>Jobs<span class="token punctuation">.</span>NativeJob</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
job<span class="token punctuation">.</span>JobDataMap<span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span>Quartz<span class="token punctuation">.</span>Jobs<span class="token punctuation">.</span>NativeJob<span class="token punctuation">.</span>PropertyCommand<span class="token punctuation">,</span> <span class="token string">&quot;echo \\&quot;hi\\&quot; &gt;&gt; foobar.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> trigger <span class="token operator">=</span> TriggerUtils<span class="token punctuation">.</span><span class="token function">MakeSecondlyTrigger</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
trigger<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;dumbTrigger&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> scheduler<span class="token punctuation">.</span><span class="token function">ScheduleJob</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> trigger<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If PropertyWaitForProcess is true, then the integer exit value of the process will be saved as the job execution result in the <code>JobExecutionContext</code>.</p><h3 id="sendmailjob" tabindex="-1"><a class="header-anchor" href="#sendmailjob"><span>SendMailJob</span></a></h3><p>A Job which sends an e-mail with the configured content to the configured recipient.</p>`,15);function d(h,b){const e=t("ExternalLinkIcon");return o(),c("div",null,[a("p",null,[a("a",r,[n("Quartz.Jobs"),i(e)]),n(" provides some useful ready-made jobs for your convenience.")]),u])}const m=s(p,[["render",d],["__file","quartz-jobs.html.vue"]]),v=JSON.parse('{"path":"/documentation/quartz-3.x/packages/quartz-jobs.html","title":"Jobs","lang":"en-US","frontmatter":{"title":"Jobs"},"headers":[{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[]},{"level":2,"title":"Features","slug":"features","link":"#features","children":[{"level":3,"title":"DirectoryScanJob","slug":"directoryscanjob","link":"#directoryscanjob","children":[]},{"level":3,"title":"FileScanJob","slug":"filescanjob","link":"#filescanjob","children":[]},{"level":3,"title":"NativeJob","slug":"nativejob","link":"#nativejob","children":[]},{"level":3,"title":"SendMailJob","slug":"sendmailjob","link":"#sendmailjob","children":[]}]}],"git":{"updatedTime":1735723320000,"contributors":[{"name":"JT","email":"975824+Hawxy@users.noreply.github.com","commits":1}]},"filePathRelative":"documentation/quartz-3.x/packages/quartz-jobs.md"}');export{m as comp,v as data};
