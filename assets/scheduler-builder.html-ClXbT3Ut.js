import{_ as o,r as p,o as c,c as i,b as n,d as s,a as t,w as e,e as u}from"./app-Ba_ts8M_.js";const l={},r=n("h1",{id:"tuning-the-scheduler",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tuning-the-scheduler"},[n("span",null,"Tuning the Scheduler")])],-1),d=n("thead",null,[n("tr",null,[n("th",null,"Property"),n("th")])],-1),k=n("td",null,"Scheduler Name",-1),h=n("td",null,"Scheduler Id",-1),m=n("tr",null,[n("td",null,"Max Batch Size"),n("td",null,"max number of jobs to run at one time")],-1),v=n("tr",null,[n("td",null,"InterruptJobsOnShutdown"),n("td",null,"..")],-1),b=n("tr",null,[n("td",null,"InterruptJobsOnShutdownWithWait"),n("td",null,"..")],-1),g=n("tr",null,[n("td",null,"BatchTriggerAcquisitionFireAheadTimeWindow"),n("td",null,"..")],-1),f=u(`<h2 id="microsoft-hosting-extensions" tabindex="-1"><a class="header-anchor" href="#microsoft-hosting-extensions"><span>Microsoft Hosting Extensions</span></a></h2><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> host <span class="token operator">=</span> Host<span class="token punctuation">.</span><span class="token function">CreateDefaultBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">ConfigureServices</span><span class="token punctuation">(</span>services <span class="token operator">=&gt;</span> 
    <span class="token punctuation">{</span>
        services<span class="token punctuation">.</span><span class="token function">AddQuartz</span><span class="token punctuation">(</span>opt <span class="token operator">=&gt;</span> 
        <span class="token punctuation">{</span>
            opt<span class="token punctuation">.</span>SchedulerId <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
            opt<span class="token punctuation">.</span>SchedulerName <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
            opt<span class="token punctuation">.</span>MaxBatchSize <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
            opt<span class="token punctuation">.</span>InterruptJobsOnShutdown <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            opt<span class="token punctuation">.</span>InterruptJobsOnShutdownWithWait <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            opt<span class="token punctuation">.</span>BatchTriggerAcquisitionFireAheadTimeWindow <span class="token operator">=</span> TimeSpan<span class="token punctuation">.</span>Zero<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="building-by-hand" tabindex="-1"><a class="header-anchor" href="#building-by-hand"><span>Building By Hand</span></a></h1><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> scheduler <span class="token operator">=</span> <span class="token function">ScheduleBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithMisfireThreshold</span><span class="token punctuation">(</span>TimeSpan<span class="token punctuation">.</span><span class="token function">FromDays</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithId</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithName</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithMaxBatchSize</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithInterruptJobsOnShutdown</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithInterruptJobsOnShutdownWithWait</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithBatchTriggerAcquisitionFireAheadTimeWindow</span><span class="token punctuation">(</span>TimeSpan<span class="token punctuation">.</span><span class="token function">FromMilliseconds</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function _(x,S){const a=p("RouteLink");return c(),i("div",null,[r,n("table",null,[d,n("tbody",null,[n("tr",null,[k,n("td",null,[s("The "),t(a,{to:"/documentation/quartz-3.x/configuration/reference.html#main-configuration"},{default:e(()=>[s("instance name")]),_:1}),s(", used when clustering")])]),n("tr",null,[h,n("td",null,[s("The "),t(a,{to:"/documentation/quartz-3.x/configuration/reference.html#main-configuration"},{default:e(()=>[s("instance id")]),_:1}),s(". Can be auto-generated")])]),m,v,b,g])]),f])}const q=o(l,[["render",_],["__file","scheduler-builder.html.vue"]]),B=JSON.parse('{"path":"/documentation/quartz-3.x/tutorial/scheduler-builder.html","title":"Tuning the Scheduler","lang":"en-US","frontmatter":{"title":"Tuning the Scheduler"},"headers":[{"level":2,"title":"Microsoft Hosting Extensions","slug":"microsoft-hosting-extensions","link":"#microsoft-hosting-extensions","children":[]}],"git":{"updatedTime":1735723320000,"contributors":[{"name":"JT","email":"975824+Hawxy@users.noreply.github.com","commits":1}]},"filePathRelative":"documentation/quartz-3.x/tutorial/scheduler-builder.md"}');export{q as comp,B as data};
